theme_bw(base_size = 14)
data_country_tally <-
data %>%
group_by(Country) %>%
tally() %>%
filter(!is.na(Country)) %>%
arrange(desc(n))
# How do I change the color of just the South Africa bar?
ggplot(data_country_tally,
aes(reorder(Country, n),
n)) +
geom_bar(stat = "summary", fun.y="mean"+scale_fill_manual(values = c("orange",
"blue",
"orange"))) +
theme_classic() +
xlab("") +
ylab("") +
coord_flip() +
ggtitle("Carpentry Workshop Respondents by Country")
data_country_tally <-
data %>%
group_by(Country) %>%
tally() %>%
filter(!is.na(Country)) %>%
arrange(desc(n))
# How do I change the color of just the South Africa bar?
ggplot(data_country_tally,
aes(reorder(Country, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
theme_classic() +
xlab("") +
ylab("") +
coord_flip() +
ggtitle("Carpentry Workshop Respondents by Country")
theme_bw(base_size = 14)
# stat="summary",fun.y="mean"+scale_fill_manual(values=c("green","blue","blue"))
data_country_tally <-
data %>%
group_by(Country) %>%
tally() %>%
filter(!is.na(Country)) %>%
arrange(desc(n))
# How do I change the color of just the South Africa bar?
ggplot(data_country_tally,
aes(reorder(Country, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
theme_classic() +
xlab("") +
ylab("") +
coord_flip() +
ggtitle("Carpentry Workshop Respondents by Country")
theme_bw(base_size = 14)
# Naupaka said I can use ggplot(iris)+geom_bar(aes(Species,Petal.Width,fill=Species),stat="summary",fun.y="mean")# +scale_fill_manual(values=c("green","blue","blue")) to change the color of just one
#bar on the plot, but I can't figure out how right now.
data_country_tally <-
data %>%
group_by(Country) %>%
tally() %>%
filter(!is.na(Country)) %>%
arrange(desc(n))
# How do I change the color of just the South Africa bar?
ggplot(data_country_tally,
aes(reorder(Country, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
theme_classic() +
xlab("") +
ylab("") +
coord_flip() +
ggtitle("Carpentry Workshop Respondents by Country") +
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
# Naupaka said I can use ggplot(iris)+geom_bar(aes(Species,Petal.Width,fill=Species),stat="summary",fun.y="mean")# +scale_fill_manual(values=c("green","blue","blue")) to change the color of just one
#bar on the plot, but I can't figure out how right now.
data_position_tally <-
data %>%
group_by(Position) %>%
tally() %>%
filter(!is.na(Position)) %>%
arrange(desc(n))
ggplot(data_position_tally,
aes(reorder(Position, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Self-Reported Status of Carpentry Learners") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_classic(base_size = 14)
data_position_tally <-
data %>%
group_by(Position) %>%
tally() %>%
filter(!is.na(Position)) %>%
arrange(desc(n))
ggplot(data_position_tally,
aes(reorder(Position, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Self-Reported Status of Carpentry Learners") +
theme(plot.title = element_text(hjust = 0.5))
theme_classic(base_size = 14)
data_programming.usage.before.workshop_tally <-
data %>%
group_by(Programming.Usage.Before.Workshop) %>%
tally() %>%
filter(!is.na(Programming.Usage.Before.Workshop)) %>%
arrange(desc(n))
ggplot(data_programming.usage.before.workshop_tally,
aes(reorder(Programming.Usage.Before.Workshop, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Learner's Programming Usage Before Attending a Carpentry Workshop") +
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
data_programming.usage.since.workshop_tally <-
data %>%
group_by(Programming.Usage.Since.Workshop) %>%
tally() %>%
filter(!is.na(Programming.Usage.Since.Workshop)) %>%
arrange(desc(n))
ggplot(data_programming.usage.since.workshop_tally,
aes(reorder(Programming.Usage.Since.Workshop, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Learner's Programming Usage Since Attending a Carpentry Workshop") +
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
table(data$Change.In.Confidence)
data_change.in.confidence_tally <-
data %>%
group_by(Change.In.Confidence) %>%
tally() %>%
filter(!is.na(Change.In.Confidence)) %>%
arrange(desc(n))
ggplot(data_change.in.confidence_tally,
aes(reorder(Change.In.Confidence, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Learner's Change in Confidence")+
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
cols_with_Agree <- map_lgl(data, ~`%in%`("Agree", .x))
data_agree <-  data[ , cols_with_Agree]
data_agree <- map_if(data_agree,
is.character,
as.factor)
title <- "Learner Perception of Carpentry Workshops"
data_agree_likert <-  likert(as.data.frame(data_agree))
theme_update(plot.title = element_text(hjust = 0.5))
plot(data_agree_likert) + ggtitle(title) +
theme(plot.title = element_text(hjust = 0.5))
install.packages(c("curl", "data.table", "lme4", "quantreg", "readxl"))
data_position_tally <-
data %>%
group_by(Position) %>%
tally() %>%
filter(!is.na(Position)) %>%
arrange(desc(n))
ggplot(data_position_tally,
aes(reorder(Position, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
theme_classic() +
xlab("") +
ylab("") +
scale_x_discrete(labels = function(x) strwrap(x, width = 10))
ggtitle("Self-Reported Status of Carpentry Learners") +
theme(plot.title = element_text(hjust = 0.5))
theme_classic(base_size = 14)
data_position_tally <-
data %>%
group_by(Position) %>%
tally() %>%
filter(!is.na(Position)) %>%
arrange(desc(n))
ggplot(data_position_tally,
aes(reorder(Position, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
scale_x_discrete(labels = function(x) strwrap(x, width = 10)) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Self-Reported Status of Carpentry Learners") +
theme(plot.title = element_text(hjust = 0.5))
theme_classic(base_size = 14)
data_position_tally <-
data %>%
group_by(Position) %>%
tally() %>%
filter(!is.na(Position)) %>%
arrange(desc(n))
ggplot(data_position_tally,
aes(reorder(Position, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
# scale_x_discrete(labels = function(x) strwrap(x, width = 10)) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Self-Reported Status of Carpentry Learners") +
theme(plot.title = element_text(hjust = 0.5))
theme_classic(base_size = 14)
data_position_tally <-
data %>%
group_by(Position) %>%
tally() %>%
filter(!is.na(Position)) %>%
arrange(desc(n))
ggplot(data_position_tally,
aes(reorder(Position, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Self-Reported Status of Carpentry Learners") +
theme(plot.title = element_text(hjust = 0.5))
theme_classic(base_size = 14)
data_programming.usage.before.workshop_tally <-
data %>%
group_by(Programming.Usage.Before.Workshop) %>%
tally() %>%
filter(!is.na(Programming.Usage.Before.Workshop)) %>%
arrange(desc(n))
ggplot(data_programming.usage.before.workshop_tally,
aes(reorder(Programming.Usage.Before.Workshop, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Learner's Programming Usage Before Attending a Carpentry Workshop") +
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
data_programming.usage.since.workshop_tally <-
data %>%
group_by(Programming.Usage.Since.Workshop) %>%
tally() %>%
filter(!is.na(Programming.Usage.Since.Workshop)) %>%
arrange(desc(n))
ggplot(data_programming.usage.since.workshop_tally,
aes(reorder(Programming.Usage.Since.Workshop, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Learner's Programming Usage Since Attending a Carpentry Workshop") +
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
table(data$Change.In.Confidence)
data_change.in.confidence_tally <-
data %>%
group_by(Change.In.Confidence) %>%
tally() %>%
filter(!is.na(Change.In.Confidence)) %>%
arrange(desc(n))
ggplot(data_change.in.confidence_tally,
aes(reorder(Change.In.Confidence, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Learner's Change in Confidence")+
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
unlink('2017-04-17-carpentry-long-term-assessment-survey-report_cache', recursive = TRUE)
# install.packages("ggmap", type = "source")
# install.packages("likert")
# install.packages("purrr")
# install.packages("mapproj")
# install.packages("ggmap")
# install.packages("dplyr")
# install.packages("knitr")
library(dplyr)
library(likert)
library(purrr)
library(ggmap)
library(mapproj)
library(ggplot2)
library(knitr)
library(RColorBrewer)
display.brewer.all()
update.packages(repos = "https://cloud.r-project.org")
download.file("https://raw.githubusercontent.com/carpentries/public-survey-info/master/documents/reports/Carpentry-Reports/Long-Term-Feedback-Survey-Report/2017-04-17-carpentry-long-term-assessment-survey-data-public.csv", "2017-04-17-carpentry-long-term-assessment-survey-data-public.csv")
data <- read.csv("2017-04-17-carpentry-long-term-assessment-survey-data-public.csv", na.strings = "")
table(data$Country)
data_country_tally <-
data %>%
group_by(Country) %>%
tally() %>%
filter(!is.na(Country)) %>%
arrange(desc(n))
# How do I change the color of just the South Africa bar?
ggplot(data_country_tally,
aes(reorder(Country, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
theme_classic() +
xlab("") +
ylab("") +
coord_flip() +
ggtitle("Carpentry Workshop Respondents by Country") +
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
# Naupaka said I can use ggplot(iris)+geom_bar(aes(Species,Petal.Width,fill=Species),stat="summary",fun.y="mean")# +scale_fill_manual(values=c("green","blue","blue")) to change the color of just one
#bar on the plot, but I can't figure out how right now.
table(data$Position)
data_position_tally <-
data %>%
group_by(Position) %>%
tally() %>%
filter(!is.na(Position)) %>%
arrange(desc(n))
ggplot(data_position_tally,
aes(reorder(Position, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Self-Reported Status of Carpentry Learners") +
theme(plot.title = element_text(hjust = 0.5))
theme_classic(base_size = 14)
table(data$Position.Other)
table(data$How.Many.Workshops)
table(data$Behaviors.Adopted)
table(data$Column25)
table(data$Column26)
table(data$Column27)
table(data$Column28)
table(data$Column29)
table(data$Column30)
table(data$Column31)
table(data$Column32)
# This is an attempt to make a table of the count of behaviors adopted.
behaviors <- matrix(c(198,74,119,111,260,169,185,119,122),ncol=1,byrow=TRUE)
colnames(behaviors) <-("Behaviors Adopted Since Attending a Carpentry Workshop")
rownames(behaviors) <-c("Improving data management and project organization.",
"Developing a data management and analysis plan.",
"Using databases, scripts and queries to manage large data sets.",
"Transforming step-by-step workflows into scripts or functions.",
"Using programming languages like R or Python, or the command line to automate repetitive tasks.",
"Reusing code.",
"Using version control to manage code.",
"Using version control to collaborate online (in public or private repositories).",
"Sharing code or data publicly on places like GitHub or FigShare.")
behaviors <- as.table(behaviors)
behaviors
data_programming.usage.before.workshop_tally <-
data %>%
group_by(Programming.Usage.Before.Workshop) %>%
tally() %>%
filter(!is.na(Programming.Usage.Before.Workshop)) %>%
arrange(desc(n))
ggplot(data_programming.usage.before.workshop_tally,
aes(reorder(Programming.Usage.Before.Workshop, n),
n)) +
geom_bar(stat = "identity", fill="orange") +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Learner's Programming Usage Before Attending a Carpentry Workshop") +
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
data_programming.usage.since.workshop_tally <-
data %>%
group_by(Programming.Usage.Since.Workshop) %>%
tally() %>%
filter(!is.na(Programming.Usage.Since.Workshop)) %>%
arrange(desc(n))
ggplot(data_programming.usage.since.workshop_tally,
aes(reorder(Programming.Usage.Since.Workshop, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Learner's Programming Usage Since Attending a Carpentry Workshop") +
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
table(data$Change.In.Confidence)
data_change.in.confidence_tally <-
data %>%
group_by(Change.In.Confidence) %>%
tally() %>%
filter(!is.na(Change.In.Confidence)) %>%
arrange(desc(n))
ggplot(data_change.in.confidence_tally,
aes(reorder(Change.In.Confidence, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
scale_x_discrete(labels = function(x) lapply(strwrap(x, width = 10, simplify = FALSE), paste, collapse="\n")) +
theme_classic() +
xlab("") +
ylab("") +
ggtitle("Learner's Change in Confidence")+
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
table(data$How.Tools.Learned.Help)
table(data$Column34)
table(data$Column34)
table(data$Column35)
table(data$Column36)
table(data$Column37)
career <- matrix(c(245,217,217,203,28,61),ncol=1,byrow=TRUE)
colnames(career) <-("How Have the Tools Covered Helped Your Work?")
rownames(career) <-c("They are improving my overall efficiency.",
"They are improving my ability to analyze data.",
"They are improving my ability to analyze data.",
"They are improving my ability to manage data.",
"The tools I learned have not helped me with my work.",
"I am not using the tools I learned.")
career <- as.table(career)
career
table(data$Contributed.To.Writing)
table(data$Carpentry.Involvement)
table(data$Column45)
table(data$Column46)
table(data$Column47)
table(data$Column48)
table(data$Column49)
table(data$Column50)
table(data$Column51)
involvement <- matrix(c(120,18,31,26,6,12,11,18),ncol=1,byrow=TRUE)
colnames(involvement) <-("Involvement Since Attending a Carpentry Workshop")
rownames(involvement) <-c("Subscribed to the newsletter.",
"Attended at least one community call.",
"Became a workshop helper.",
"Became a Carpentry instructor.",
"Joined a committee.",
"Joined a mentoring group.",
"Participated in a Twitter chat.",
"Contributed to a Carpentry lesson.")
involvement <- as.table(involvement)
involvement
table(data$Recommended)
cols_with_Agree <- map_lgl(data, ~`%in%`("Agree", .x))
data_agree <-  data[ , cols_with_Agree]
data_agree <- map_if(data_agree,
is.character,
as.factor)
title <- "Learner Perception of Carpentry Workshops"
data_agree_likert <-  likert(as.data.frame(data_agree))
theme_update(plot.title = element_text(hjust = 0.5))
plot(data_agree_likert) + ggtitle(title) +
theme(plot.title = element_text(hjust = 0.5))
# In what country did you attend a Carpentry workshop?
#map <- get_map(location = 'Europe', zoom = 4)
#ggmap(map)
data_country_tally <-
data %>%
group_by(Country) %>%
tally() %>%
filter(!is.na(Country)) %>%
arrange(desc(n))
# How do I change the color of just the South Africa bar?
ggplot(data_country_tally,
aes(reorder(Country, n),
n)) +
geom_bar(stat = "identity", fill = "orange") +
theme_classic() +
xlab("") +
ylab("") +
coord_flip() +
ggtitle("Carpentry Workshop Respondents by Country") +
theme(plot.title = element_text(hjust = 0.5))
theme_bw(base_size = 14)
# Naupaka said I can use ggplot(iris)+geom_bar(aes(Species,Petal.Width,fill=Species),stat="summary",fun.y="mean")# +scale_fill_manual(values=c("green","blue","blue")) to change the color of just one
#bar on the plot, but I can't figure out how right now.
# install.packages("ggmap", type = "source")
# install.packages("likert")
# install.packages("purrr")
# install.packages("mapproj")
# install.packages("ggmap")
# install.packages("dplyr")
# install.packages("knitr")
library(dplyr)
library(likert)
library(purrr)
library(ggmap)
library(mapproj)
library(ggplot2)
library(knitr)
library(RColorBrewer)
display.brewer.all()
update.packages(repos = "https://cloud.r-project.org")
